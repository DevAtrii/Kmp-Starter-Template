[versions]
# Android Build Tools & SDK
agp = "8.13.0"
android-compileSdk = "36"
android-minSdk = "24"
#noinspection EditedTargetSdkVersion
android-targetSdk = "36"
# app universal
app-version-major = "1"
app-version-minor = "0"
app-version-patch = "0"

# cocoapods
cocoapods-fw = "1.0"
cocoapods-ios = "18.6"

# Kotlin Ecosystem
calfFilePicker = "0.8.0"
coilCompose = "3.3.0"
kotlin = "2.2.21"
kotlinx-datetime = "0.7.1"
kotlinx-serialization-json = "1.9.0"
coroutines = "1.10.2"

# Compose & UI
compose-multiplatform = "1.10.0-alpha02"
androidx-activity-compose = "1.11.0"
androidx-lifecycle = "2.9.5"
navigation-compose = "2.9.0"


# Firebase & Authentication
firebase-bom = "33.16.0"
gitlive-firebase = "2.1.0"
kmpauth-google = "2.3.1"
google-services = "4.4.3"

# Networking
ktor = "3.3.1"

# Dependency Injection
koin = "4.1.1"

# Google Play Services
play-services-ads = "24.7.0"
play-update-ktx = "2.1.0"
play-review-ktx = "2.0.2"

# RevenueCat Purchases
#noinspection GradleDependency
purchases-kmp = "2.2.2+17.10.0"

# Data Storage
data-store = "1.1.7"

# Database
room = "2.8.3"
ksp = "2.2.0-2.0.2"
sqlite = "2.6.1"

# Testing
androidx-test-ext = "1.3.0"

# Utilities
logging = "2.0.3"
atomic-fu = "0.29.0"
stately-common = "2.1.0"

#Accompinist
accompanist-system-ui-controller = "0.36.0"

swift-klib = "0.6.4"

# notifications
alarmee = "2.5.0"

mixpanel-android = "8.2.4"
kotlinStdlib = "2.2.20"
runner = "1.5.2"
core = "1.5.0"

[libraries]
# Mix panel
kotlinx-coroutines-play-services = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "coroutines" }
mixpanel-android = { module = "com.mixpanel.android:mixpanel-android", version.ref = "mixpanel-android" }
# notifications
alarmee = { group = "io.github.tweener", name = "alarmee", version.ref = "alarmee" }
# Accompinist
accompanist-system-ui-controller = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanist-system-ui-controller" }
# Firebase & Authentication
calf-file-picker = { module = "com.mohamedrejeb.calf:calf-file-picker", version.ref = "calfFilePicker" }
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coilCompose" }
gitlive-firebase-config = { module = "dev.gitlive:firebase-config", version.ref = "gitlive-firebase" }
gitlive-firebase-firestore = { module = "dev.gitlive:firebase-firestore", version.ref = "gitlive-firebase" }
gitlive-firebase-auth = { module = "dev.gitlive:firebase-auth", version.ref = "gitlive-firebase" }
gitlive-firebase-analytics = { module = "dev.gitlive:firebase-analytics", version.ref = "gitlive-firebase" }
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase-bom" }
kmpauth-firebase = { module = "io.github.mirzemehdi:kmpauth-firebase", version.ref = "kmpauth-google" }
kmpauth-google = { module = "io.github.mirzemehdi:kmpauth-google", version.ref = "kmpauth-google" }

# Ktor HTTP Client
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

# Dependency Injection (Koin)
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin" }

# Kotlinx Libraries
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization-json" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }

# AndroidX Libraries
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity-compose" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }

# Navigation
navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigation-compose" }

# RevenueCat Purchases
purchases-ui = { module = "com.revenuecat.purchases:purchases-kmp-ui", version.ref = "purchases-kmp" }
purchases-core = { module = "com.revenuecat.purchases:purchases-kmp-core", version.ref = "purchases-kmp" }

# Google Play Services
play-services-ads = { module = "com.google.android.gms:play-services-ads", version.ref = "play-services-ads" }
play-app-review-ktx = { module = "com.google.android.play:review-ktx", version.ref = "play-review-ktx" }
play-app-update-ktx = { module = "com.google.android.play:app-update-ktx", version.ref = "play-update-ktx" }

# Data Storage
datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "data-store" }

# Database
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-runtime-android = { module = "androidx.room:room-runtime-android", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
sqlite-bundled = { module = "androidx.sqlite:sqlite-bundled", version.ref = "sqlite" }

# Testing
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
androidx-test-ext-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-test-ext" }

# Utilities
logging = { module = "org.lighthousegames:logging", version.ref = "logging" }
atomic-fu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "atomic-fu" }
stately-common = { module = "co.touchlab:stately-common", version.ref = "stately-common" }
ui-backhandler = { module = "org.jetbrains.compose.ui:ui-backhandler", version.ref = "compose-multiplatform" }
kotlin-stdlib = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib", version.ref = "kotlinStdlib" }
androidx-runner = { group = "androidx.test", name = "runner", version.ref = "runner" }
androidx-core = { group = "androidx.test", name = "core", version.ref = "core" }
# Plugins
kotlin-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
compose-multiplatform-plugin = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "compose-multiplatform" }
[plugins]
# Android Plugins
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }

# Kotlin Multiplatform Plugins
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-cocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }

# Database
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
room = { id = "androidx.room", version.ref = "room" }

# Compose Plugins
compose-multiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

# Google Services Plugins
google-services = { id = "com.google.gms.google-services", version.ref = "google-services" }

swift-klib = { id = "io.github.ttypic.swiftklib", version.ref = "swift-klib" }
android-kotlin-multiplatform-library = { id = "com.android.kotlin.multiplatform.library", version.ref = "agp" }
android-lint = { id = "com.android.lint", version.ref = "agp" }

# custom
build-compose-multiplatform = { id = "com.kmpstarter.plugins.composemultiplatform" }
build-koin-core = { id = "com.kmpstarter.plugins.koin" }
build-koin-compose = { id = "com.kmpstarter.plugins.koincompose" }
build-common = { id = "com.kmpstarter.plugins.common" }

[bundles]
gradle-plugins = [
    "kotlin-plugin",
    "compose-multiplatform-plugin",
]
